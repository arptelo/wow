# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

@map = {}

$(document).ready ->
	if $('.map').length > 0
		initializeMap()

@initializeMap = () ->
	styles = [
		"stylers": [
    		"hue": "#2F77BF"
    	]
    ,
	    "featureType": "road",
	    "stylers": [
	    	"visibility": "off"
	    ]
	,
	    "featureType": "administrative.province",
	    "stylers": [
	    	"visibility": "simplified"
	    ]
	,
	    "featureType": "administrative.locality",
	    "stylers": [
	    	"visibility": "simplified"
	    ]
	]
	mapOptions =
		center: new google.maps.LatLng(50, 15),
		zoom: 4,
		panControl: false,
		zoomControl: false,
		mapTypeControl: false,
		scaleControl: false,
		streetViewControl: false,
		overviewMapControl: false,
		styles: styles
	@map = new google.maps.Map(document.getElementById("map-canvas"),mapOptions)

@getPhotos = (lat, lng, photoSize = 'original') ->
	myOptions = 
  		'width': 300,
  		'height': 200
	myRequest = new panoramio.PhotoRequest
		'rect': {'sw': {'lat': lat, 'lng': lng}, 'ne': {'lat': (lat+0.005), 'lng': (lng+0.005)}}
	wapiblock = document.getElementById('wapiblock')
	widget = new panoramio.PhotoWidget(wapiblock, myRequest, myOptions)
	widget.setPosition(0)