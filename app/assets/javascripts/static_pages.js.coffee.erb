# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

@map = {}

$(document).ready ->
	if $('.map').length > 0
		initializeMap()

@initializeMap = () ->
	styles = [
		"stylers": [
    		"hue": "#2F77BF"
    	]
    ,
	    "featureType": "road",
	    "stylers": [
	    	"visibility": "off"
	    ]
	,
	    "featureType": "poi",
	    "stylers": [
	    	"visibility": "off"
	    ]
	,
	    "featureType": "administrative.province",
	    "stylers": [
	    	"visibility": "simplified"
	    ]
	,
	    "featureType": "administrative.locality",
	    "stylers": [
	    	"visibility": "simplified"
	    ]
	]
	mapOptions =
		center: new google.maps.LatLng(50, 15),
		zoom: 4,
		panControl: false,
		zoomControl: false,
		mapTypeControl: false,
		scaleControl: false,
		streetViewControl: false,
		overviewMapControl: false,
		styles: styles
	@map = new google.maps.Map(document.getElementById("map-canvas"),mapOptions)

@getPhotos = (lat, lng, $fotoDiv, $infoDiv, putMarker = false, photoSize = 'original') ->
	url = 'http://www.panoramio.com/map/get_panoramas.php?set=public&from=0&to=3&minx=' + lng + '&miny=' + lat + '&maxx=' + (lng+0.005) + '&maxy=' + (lat+0.005) + '&callback=?&size=' + photoSize + '&mapfilter=false'
	$.getJSON(url, {format: 'jsonp'})
		.done (data) ->
			if putMarker
				placeMarker lat, lng
			changeBgImage $fotoDiv, $infoDiv, data
			clearInterval timerId
			timerId = setInterval ->
				changeBgImage $fotoDiv, $infoDiv, data
			, 10000
		.fail ->
			console.log "Error"